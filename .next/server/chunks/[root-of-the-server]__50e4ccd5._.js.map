{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/mahir/Documents/GitHub/Energy%20Monitoring%20System/src/lib/tuya.js"],"sourcesContent":["import crypto from \"crypto\";\n\nconst { TUYA_CLIENT_ID, TUYA_CLIENT_SECRET, TUYA_API_REGION } = process.env;\n\nconst BASE_URL = `https://openapi.${TUYA_API_REGION}.com`;\n\nlet cachedToken = null;\nlet cachedTokenExpire = 0;\n\nfunction genSignature({ method, url, body, t, accessToken = \"\" }) {\n  const contentHash = crypto\n    .createHash(\"sha256\")\n    .update(body || \"\")\n    .digest(\"hex\");\n  const stringToSign = [method, contentHash, \"\", url].join(\"\\n\");\n  const signStr = TUYA_CLIENT_ID + accessToken + t + stringToSign;\n  return crypto\n    .createHmac(\"sha256\", TUYA_CLIENT_SECRET)\n    .update(signStr)\n    .digest(\"hex\")\n    .toUpperCase();\n}\n\nasync function getAccessToken() {\n  try {\n    const now = Date.now();\n    if (cachedToken && now < cachedTokenExpire) return cachedToken;\n\n    const t = now.toString();\n    const method = \"GET\";\n    const url = \"/v1.0/token?grant_type=1\";\n    const sign = genSignature({ method, url, t });\n\n    console.log(`Making token request to: ${BASE_URL}${url}`);\n    console.log(`Headers:`, {\n      client_id: TUYA_CLIENT_ID,\n      sign,\n      t,\n      sign_method: \"HMAC-SHA256\",\n    });\n\n    const res = await fetch(`${BASE_URL}${url}`, {\n      method: \"GET\",\n      headers: {\n        client_id: TUYA_CLIENT_ID,\n        sign,\n        t,\n        sign_method: \"HMAC-SHA256\",\n      },\n    });\n\n    console.log(`Token response status: ${res.status}`);\n\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(`Token request failed: ${res.status} - ${errorText}`);\n      throw new Error(`Token request failed: ${res.status}`);\n    }\n\n    const data = await res.json();\n    console.log(`Token response data:`, JSON.stringify(data, null, 2));\n\n    if (!data.success) {\n      throw new Error(`Token request failed: ${data.msg || \"Unknown error\"}`);\n    }\n\n    if (!data.result || !data.result.access_token) {\n      throw new Error(\"Invalid token response structure\");\n    }\n\n    cachedToken = data.result.access_token;\n    cachedTokenExpire = now + data.result.expire_time * 1000 - 60000;\n    // refresh 1 min before expiry\n    console.log(\"Token obtained successfully\");\n    return cachedToken;\n  } catch (error) {\n    console.error(\"Error getting access token:\", error.message);\n    throw error;\n  }\n}\n\nexport async function fetchDeviceStatus(deviceId) {\n  try {\n    const token = await getAccessToken();\n    const t = Date.now().toString();\n    const method = \"GET\";\n    const urlPath = `/v1.0/iot-03/devices/${deviceId}/status`;\n    const sign = genSignature({ method, url: urlPath, t, accessToken: token });\n\n    const res = await fetch(`${BASE_URL}${urlPath}`, {\n      method: \"GET\",\n      headers: {\n        client_id: TUYA_CLIENT_ID,\n        sign,\n        t,\n        sign_method: \"HMAC-SHA256\",\n        access_token: token,\n      },\n    });\n\n    if (!res.ok) {\n      throw new Error(`Device status request failed: ${res.status}`);\n    }\n\n    const data = await res.json();\n    return data.result; // returns array of status\n  } catch (error) {\n    console.error(\"Error in fetchDeviceStatus:\", error.message);\n    throw error;\n  }\n}\n\nexport async function controlDeviceSwitch(deviceId, switchState) {\n  try {\n    const token = await getAccessToken();\n    const t = Date.now().toString();\n    const method = \"POST\";\n    const urlPath = `/v1.0/iot-03/devices/${deviceId}/commands`;\n\n    // Prepare the request body for standard device control\n    const body = JSON.stringify({\n      commands: [\n        {\n          code: \"switch_1\",\n          value: switchState,\n        },\n      ],\n    });\n\n    console.log(`Making request to: ${BASE_URL}${urlPath}`);\n    console.log(`Request body: ${body}`);\n\n    const sign = genSignature({\n      method,\n      url: urlPath,\n      body,\n      t,\n      accessToken: token,\n    });\n\n    const res = await fetch(`${BASE_URL}${urlPath}`, {\n      method: \"POST\",\n      headers: {\n        client_id: TUYA_CLIENT_ID,\n        sign,\n        t,\n        sign_method: \"HMAC-SHA256\",\n        access_token: token,\n        \"Content-Type\": \"application/json\",\n      },\n      body,\n    });\n\n    if (!res.ok) {\n      throw new Error(`Device control request failed: ${res.status}`);\n    }\n\n    const data = await res.json();\n    console.log(`Tuya API response status: ${res.status}`);\n    console.log(`Tuya API response data:`, JSON.stringify(data, null, 2));\n\n    return data;\n  } catch (error) {\n    console.error(\"Error in controlDeviceSwitch:\", error.message);\n    throw error;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/mahir/Documents/GitHub/Energy%20Monitoring%20System/src/app/api/switch-status/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { fetchDeviceStatus } from \"@/lib/tuya\";\n\nexport async function GET() {\n  try {\n    const deviceId = process.env.TUYA_DEVICE_ID;\n    if (!deviceId) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: \"Device ID not configured\",\n        },\n        { status: 500 }\n      );\n    }\n\n    const status = await fetchDeviceStatus(deviceId);\n\n    if (!status || !Array.isArray(status)) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: \"Invalid response from Tuya API\",\n        },\n        { status: 500 }\n      );\n    }\n\n    // Find the switch_1 status\n    const switchStatus = status.find((s) => s.code === \"switch_1\");\n\n    if (!switchStatus) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: \"Switch status not found in device data\",\n        },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        switch: switchStatus.value, // true for on, false for off\n        timestamp: new Date().toISOString(),\n        lastUpdated: new Date().toISOString(),\n      },\n    });\n  } catch (error) {\n    console.error(\"Error fetching switch status:\", error);\n    return NextResponse.json(\n      {\n        success: false,\n        error: \"Failed to fetch switch status from Tuya API\",\n        details: error.message,\n      },\n      { status: 500 }\n    );\n  }\n}\n\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,QAAQ,GAAG,CAAC,cAAc;QAC3C,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,OAAO;YACT,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,MAAM,CAAA,GAAA,oHAAA,CAAA,oBAAiB,AAAD,EAAE;QAEvC,IAAI,CAAC,UAAU,CAAC,MAAM,OAAO,CAAC,SAAS;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,OAAO;YACT,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,2BAA2B;QAC3B,MAAM,eAAe,OAAO,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;QAEnD,IAAI,CAAC,cAAc;YACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,OAAO;YACT,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ,QAAQ,aAAa,KAAK;gBAC1B,WAAW,IAAI,OAAO,WAAW;gBACjC,aAAa,IAAI,OAAO,WAAW;YACrC;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO;YACP,SAAS,MAAM,OAAO;QACxB,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}