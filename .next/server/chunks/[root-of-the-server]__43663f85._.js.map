{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/mahir/Documents/GitHub/Energy%20Monitoring%20System/src/lib/tuya.js"],"sourcesContent":["import crypto from \"crypto\";\n\nconst { TUYA_CLIENT_ID, TUYA_CLIENT_SECRET, TUYA_API_REGION } = process.env;\n\nconst BASE_URL = `https://openapi.${TUYA_API_REGION}.com`;\n\nlet cachedToken = null;\nlet cachedTokenExpire = 0;\n\nfunction genSignature({ method, url, body, t, accessToken = \"\" }) {\n  const contentHash = crypto\n    .createHash(\"sha256\")\n    .update(body || \"\")\n    .digest(\"hex\");\n  const stringToSign = [method, contentHash, \"\", url].join(\"\\n\");\n  const signStr = TUYA_CLIENT_ID + accessToken + t + stringToSign;\n  return crypto\n    .createHmac(\"sha256\", TUYA_CLIENT_SECRET)\n    .update(signStr)\n    .digest(\"hex\")\n    .toUpperCase();\n}\n\nasync function getAccessToken() {\n  try {\n    const now = Date.now();\n    if (cachedToken && now < cachedTokenExpire) return cachedToken;\n\n    const t = now.toString();\n    const method = \"GET\";\n    const url = \"/v1.0/token?grant_type=1\";\n    const sign = genSignature({ method, url, t });\n\n    console.log(`Making token request to: ${BASE_URL}${url}`);\n    console.log(`Headers:`, {\n      client_id: TUYA_CLIENT_ID,\n      sign,\n      t,\n      sign_method: \"HMAC-SHA256\",\n    });\n\n    const res = await fetch(`${BASE_URL}${url}`, {\n      method: \"GET\",\n      headers: {\n        client_id: TUYA_CLIENT_ID,\n        sign,\n        t,\n        sign_method: \"HMAC-SHA256\",\n      },\n    });\n\n    console.log(`Token response status: ${res.status}`);\n\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(`Token request failed: ${res.status} - ${errorText}`);\n      throw new Error(`Token request failed: ${res.status}`);\n    }\n\n    const data = await res.json();\n    console.log(`Token response data:`, JSON.stringify(data, null, 2));\n\n    if (!data.success) {\n      throw new Error(`Token request failed: ${data.msg || \"Unknown error\"}`);\n    }\n\n    if (!data.result || !data.result.access_token) {\n      throw new Error(\"Invalid token response structure\");\n    }\n\n    cachedToken = data.result.access_token;\n    cachedTokenExpire = now + data.result.expire_time * 1000 - 60000;\n    // refresh 1 min before expiry\n    console.log(\"Token obtained successfully\");\n    return cachedToken;\n  } catch (error) {\n    console.error(\"Error getting access token:\", error.message);\n    throw error;\n  }\n}\n\nexport async function fetchDeviceStatus(deviceId) {\n  try {\n    const token = await getAccessToken();\n    const t = Date.now().toString();\n    const method = \"GET\";\n    const urlPath = `/v1.0/iot-03/devices/${deviceId}/status`;\n    const sign = genSignature({ method, url: urlPath, t, accessToken: token });\n\n    const res = await fetch(`${BASE_URL}${urlPath}`, {\n      method: \"GET\",\n      headers: {\n        client_id: TUYA_CLIENT_ID,\n        sign,\n        t,\n        sign_method: \"HMAC-SHA256\",\n        access_token: token,\n      },\n    });\n\n    if (!res.ok) {\n      throw new Error(`Device status request failed: ${res.status}`);\n    }\n\n    const data = await res.json();\n    return data.result; // returns array of status\n  } catch (error) {\n    console.error(\"Error in fetchDeviceStatus:\", error.message);\n    throw error;\n  }\n}\n\nexport async function controlDeviceSwitch(deviceId, switchState) {\n  try {\n    const token = await getAccessToken();\n    const t = Date.now().toString();\n    const method = \"POST\";\n    const urlPath = `/v1.0/iot-03/devices/${deviceId}/commands`;\n\n    // Prepare the request body for standard device control\n    const body = JSON.stringify({\n      commands: [\n        {\n          code: \"switch_1\",\n          value: switchState,\n        },\n      ],\n    });\n\n    console.log(`Making request to: ${BASE_URL}${urlPath}`);\n    console.log(`Request body: ${body}`);\n\n    const sign = genSignature({\n      method,\n      url: urlPath,\n      body,\n      t,\n      accessToken: token,\n    });\n\n    const res = await fetch(`${BASE_URL}${urlPath}`, {\n      method: \"POST\",\n      headers: {\n        client_id: TUYA_CLIENT_ID,\n        sign,\n        t,\n        sign_method: \"HMAC-SHA256\",\n        access_token: token,\n        \"Content-Type\": \"application/json\",\n      },\n      body,\n    });\n\n    if (!res.ok) {\n      throw new Error(`Device control request failed: ${res.status}`);\n    }\n\n    const data = await res.json();\n    console.log(`Tuya API response status: ${res.status}`);\n    console.log(`Tuya API response data:`, JSON.stringify(data, null, 2));\n\n    return data;\n  } catch (error) {\n    console.error(\"Error in controlDeviceSwitch:\", error.message);\n    throw error;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/mahir/Documents/GitHub/Energy%20Monitoring%20System/src/lib/mongodb.js"],"sourcesContent":["import { MongoClient } from \"mongodb\";\n\nif (!process.env.MONGO_URI) {\n  throw new Error('Invalid/Missing environment variable: \"MONGO_URI\"');\n}\n\nconst uri = process.env.MONGO_URI;\nconst options = {};\n\nlet client;\nlet clientPromise;\n\nif (process.env.NODE_ENV === \"development\") {\n  // In development mode, use a global variable so that the value\n  // is preserved across module reloads caused by HMR (Hot Module Replacement).\n  let globalWithMongo = global;\n\n  if (!globalWithMongo._mongoClientPromise) {\n    client = new MongoClient(uri, options);\n    globalWithMongo._mongoClientPromise = client.connect();\n  }\n  clientPromise = globalWithMongo._mongoClientPromise;\n} else {\n  // In production mode, it's best to not use a global variable.\n  client = new MongoClient(uri, options);\n  clientPromise = client.connect();\n}\n\n// Export a module-scoped MongoClient promise. By doing this in a\n// separate module, the client can be shared across functions.\nexport default clientPromise;\n\nexport async function getDatabase() {\n  const client = await clientPromise;\n  return client.db(\"tuya\");\n}\n\nexport async function getCollection(collectionName = \"device_data\") {\n  const db = await getDatabase();\n  return db.collection(collectionName);\n}\n\nexport async function insertDeviceData(data) {\n  const collection = await getCollection();\n  return await collection.insertOne(data);\n}\n\nexport async function getTodayData(timezone = \"Asia/Dhaka\") {\n  const collection = await getCollection();\n\n  const todayStart = getTodayStartInTimezone(timezone);\n  const todayEnd = getTodayEndInTimezone(timezone);\n\n  console.log(`Today start (${timezone}): ${todayStart.toISOString()}`);\n  console.log(`Today end (${timezone}): ${todayEnd.toISOString()}`);\n\n  const pipeline = [\n    {\n      $match: {\n        timestamp: { $gte: todayStart, $lte: todayEnd },\n      },\n    },\n    {\n      $unwind: \"$status\",\n    },\n    {\n      $group: {\n        _id: {\n          hour: {\n            $hour: {\n              date: \"$timestamp\",\n              timezone: \"Asia/Dhaka\",\n            },\n          },\n          code: \"$status.code\",\n        },\n        value: { $avg: \"$status.value\" },\n      },\n    },\n    {\n      $group: {\n        _id: \"$_id.hour\",\n        data: {\n          $push: {\n            code: \"$_id.code\",\n            value: \"$value\",\n          },\n        },\n      },\n    },\n    {\n      $sort: { _id: 1 },\n    },\n  ];\n\n  return await collection.aggregate(pipeline).toArray();\n}\n\nexport async function getTodayConsumption(timezone = \"Asia/Dhaka\") {\n  const collection = await getCollection();\n\n  const todayStart = getTodayStartInTimezone(timezone);\n  const now = new Date();\n\n  const pipeline = [\n    {\n      $match: {\n        timestamp: { $gte: todayStart, $lte: now },\n        \"status.code\": \"switch_1\",\n        \"status.value\": true,\n      },\n    },\n    {\n      $sort: { timestamp: 1 },\n    },\n    {\n      $group: {\n        _id: null,\n        totalKwh: {\n          $sum: {\n            $multiply: [\n              {\n                $divide: [\n                  {\n                    $subtract: [\n                      {\n                        $ifNull: [\n                          {\n                            $arrayElemAt: [\n                              {\n                                $filter: {\n                                  input: {\n                                    $arrayElemAt: [\n                                      {\n                                        $slice: [\n                                          \"$status\",\n                                          {\n                                            $add: [\n                                              {\n                                                $indexOfArray: [\n                                                  \"$status.code\",\n                                                  \"switch_1\",\n                                                ],\n                                              },\n                                              1,\n                                            ],\n                                          },\n                                        ],\n                                      },\n                                      0,\n                                    ],\n                                  },\n                                  cond: { $eq: [\"$$this.code\", \"cur_power\"] },\n                                },\n                              },\n                              0,\n                            ],\n                          },\n                          { value: 0 },\n                        ],\n                      }.value,\n                      0,\n                    ],\n                  },\n                  1000,\n                ],\n              },\n              {\n                $divide: [\n                  {\n                    $subtract: [\n                      {\n                        $ifNull: [\n                          {\n                            $arrayElemAt: [\n                              {\n                                $slice: [\n                                  \"$timestamp\",\n                                  {\n                                    $add: [\n                                      {\n                                        $indexOfArray: [\n                                          \"$status.code\",\n                                          \"switch_1\",\n                                        ],\n                                      },\n                                      1,\n                                    ],\n                                  },\n                                ],\n                              },\n                              0,\n                            ],\n                          },\n                          { $arrayElemAt: [\"$timestamp\", 0] },\n                        ],\n                      },\n                      3600000,\n                    ],\n                  },\n                  1,\n                ],\n              },\n            ],\n          },\n        },\n        dataPoints: { $sum: 1 },\n      },\n    },\n  ];\n\n  const result = await collection.aggregate(pipeline).toArray();\n\n  if (result.length === 0) {\n    return {\n      kwh: 0,\n      cost: 0,\n      dataPoints: 0,\n      message: \"No AC ON data found for today\",\n    };\n  }\n\n  const consumption = result[0];\n  const totalKwh = consumption.totalKwh;\n  const cost = totalKwh * 10; // 10 Taka per unit\n\n  return {\n    kwh: parseFloat(totalKwh.toFixed(4)),\n    cost: parseFloat(cost.toFixed(2)),\n    dataPoints: consumption.dataPoints,\n    timeRange: {\n      start: todayStart.toISOString(),\n      end: now.toISOString(),\n      timezone: timezone,\n    },\n    rate: 10,\n    calculationMethod: \"Only AC ON Intervals (Riemann Sum)\",\n  };\n}\n\nfunction getTodayStartInTimezone(timezone) {\n  const now = new Date();\n  if (timezone === \"Asia/Dhaka\") {\n    const dhakaDate = new Date(now.getTime() + 6 * 60 * 60 * 1000);\n    dhakaDate.setUTCHours(0, 0, 0, 0);\n    const utcStart = new Date(dhakaDate.getTime() - 6 * 60 * 60 * 1000);\n    return utcStart;\n  }\n  const localDate = new Date(now);\n  localDate.setHours(0, 0, 0, 0);\n  return localDate;\n}\n\nfunction getTodayEndInTimezone(timezone) {\n  const now = new Date();\n  if (timezone === \"Asia/Dhaka\") {\n    const dhakaDate = new Date(now.getTime() + 6 * 60 * 60 * 1000);\n    dhakaDate.setUTCHours(23, 59, 59, 999);\n    const utcEnd = new Date(dhakaDate.getTime() - 6 * 60 * 60 * 1000);\n    return utcEnd;\n  }\n  const localDate = new Date(now);\n  localDate.setHours(23, 59, 59, 999);\n  return localDate;\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///home/mahir/Documents/GitHub/Energy%20Monitoring%20System/src/app/api/device-status/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { fetchDeviceStatus } from \"@/lib/tuya\";\nimport { insertDeviceData } from \"@/lib/mongodb\";\n\nexport async function GET() {\n  try {\n    const deviceId = process.env.TUYA_DEVICE_ID;\n    if (!deviceId) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: \"Device ID not configured\",\n        },\n        { status: 500 }\n      );\n    }\n\n    const status = await fetchDeviceStatus(deviceId);\n\n    if (!status || !Array.isArray(status)) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: \"Invalid response from Tuya API\",\n        },\n        { status: 500 }\n      );\n    }\n\n    // Store the data in MongoDB\n    const doc = {\n      timestamp: new Date(),\n      status,\n    };\n\n    try {\n      await insertDeviceData(doc);\n    } catch (dbError) {\n      console.error(\"Error storing data in MongoDB:\", dbError);\n      // Continue even if DB storage fails\n    }\n\n    // Transform the data for the response\n    const transformed = {\n      time: doc.timestamp.toISOString(),\n      current: getValue(status, \"cur_current\"),\n      voltage: getValue(status, \"cur_voltage\"),\n      power: getValue(status, \"cur_power\"),\n      switch: getValue(status, \"switch_1\"),\n    };\n\n    return NextResponse.json({\n      success: true,\n      data: transformed,\n      raw: status,\n    });\n  } catch (error) {\n    console.error(\"Error fetching device status:\", error);\n    return NextResponse.json(\n      {\n        success: false,\n        error: \"Failed to fetch device status from Tuya API\",\n        details: error.message,\n      },\n      { status: 500 }\n    );\n  }\n}\n\nfunction getValue(statusArray, code) {\n  const item = statusArray.find((s) => s.code === code);\n  return item ? item.value : null;\n}\n\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,QAAQ,GAAG,CAAC,cAAc;QAC3C,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,OAAO;YACT,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,MAAM,CAAA,GAAA,oHAAA,CAAA,oBAAiB,AAAD,EAAE;QAEvC,IAAI,CAAC,UAAU,CAAC,MAAM,OAAO,CAAC,SAAS;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,OAAO;YACT,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,4BAA4B;QAC5B,MAAM,MAAM;YACV,WAAW,IAAI;YACf;QACF;QAEA,IAAI;YACF,MAAM,CAAA,GAAA,uHAAA,CAAA,mBAAgB,AAAD,EAAE;QACzB,EAAE,OAAO,SAAS;YAChB,QAAQ,KAAK,CAAC,kCAAkC;QAChD,oCAAoC;QACtC;QAEA,sCAAsC;QACtC,MAAM,cAAc;YAClB,MAAM,IAAI,SAAS,CAAC,WAAW;YAC/B,SAAS,SAAS,QAAQ;YAC1B,SAAS,SAAS,QAAQ;YAC1B,OAAO,SAAS,QAAQ;YACxB,QAAQ,SAAS,QAAQ;QAC3B;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;YACN,KAAK;QACP;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO;YACP,SAAS,MAAM,OAAO;QACxB,GACA;YAAE,QAAQ;QAAI;IAElB;AACF;AAEA,SAAS,SAAS,WAAW,EAAE,IAAI;IACjC,MAAM,OAAO,YAAY,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;IAChD,OAAO,OAAO,KAAK,KAAK,GAAG;AAC7B","debugId":null}}]
}